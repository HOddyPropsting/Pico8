pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
z0_block = {{0,0},{1,0},{1,1},{2,1}}
z1_block = {{1,0},{1,1},{0,1},{0,2}}
s0_block = {{0,1},{1,1},{1,0},{2,0}}
s1_block = {{0,0},{0,1},{1,1},{1,2}}
o0_block = {{0,0},{0,1},{1,1},{1,0}}
l0_block = {{0,0},{0,1},{0,2},{1,2}}
l1_block = {{2,0},{2,1},{1,1},{0,1}}
l2_block = {{0,0},{1,0},{1,1},{1,2}}
l3_block = {{0,0},{0,1},{1,0},{2,0}}
j0_block = {{1,0},{1,1},{1,2},{0,2}}
j1_block = {{0,0},{1,0},{2,0},{2,1}}
j2_block = {{0,0},{1,0},{0,1},{0,2}}
j3_block = {{0,0},{0,1},{1,1},{2,1}}
i0_block = {{0,0},{0,1},{0,2},{0,3}}
i1_block = {{0,0},{1,0},{2,0},{3,0}}
t0_block = {{0,0},{1,0},{2,0},{1,1}}
t1_block = {{0,0},{0,1},{0,2},{1,1}}
t2_block = {{1,0},{0,1},{2,1},{1,1}}
t3_block = {{0,1},{1,0},{1,2},{1,1}}

z_block = {z0_block,z1_block}
s_block = {s0_block,s1_block}
o_block = {o0_block}
l_block = {l0_block,l1_block,l2_block,l3_block}
j_block = {j0_block,j1_block,j2_block,j3_block}
i_block = {i0_block,i1_block}
t_block = {t0_block,t1_block,t2_block,t3_block}

blocks = {z_block,s_block,o_block,i_block,j_block,l_block,t_block}

s_next_block = 1
t_gravity_timer = 30
t_gravity_timer_max = 30
current_piece = {piece=z_block,lx=5,ly=0,rot=1,sprite=1}
score = 0
game_over = false
t_difficulty_increase = 5*60

function get_current_locs()
 locs = {}
 for x in all(current_piece.piece[current_piece.rot]) do
 	add(locs,{lx=x[1]+current_piece.lx,ly=x[2]+current_piece.ly})
 end
 return locs
end

function rot_⬅️()
 rot = current_piece.rot -1
 if rot < 1 then
  rot = #(current_piece.piece)
 end
 for x in all(current_piece.piece[rot]) do
 	if fget(mget(x[1]+current_piece.lx,x[2]+current_piece.ly),0) then
 	 return
 	end
 end
 current_piece.rot = rot
end

function rot_➡️()
 rot = current_piece.rot+1
 if rot > #current_piece.piece then
  rot = 1
 end
 for x in all(current_piece.piece[rot]) do
 	if fget(mget(x[1]+current_piece.lx,x[2]+current_piece.ly),0) then
 	 return
 	end
 end
 current_piece.rot = rot
end

function _update60()

 if game_over then
  if btnp(5) then
	  game_over = false
	  t_difficulty_increase = 5*60
	  t_gravity_timer_max = 30
	  score = 0
	  for y=0,14 do
	   for x=1,9 do
	    mset(x,y,0)
	   end
	  end
	 end
	 return
 end
 
 t_difficulty_increase -= 1
 
 if t_difficulty_increase < 1 then
  t_difficulty_increase = 5*60
  t_gravity_timer_max -= 1
  if t_gravity_timer_max < 5 then
   t_gravity_timer_max = 5
  end
 end

 t_gravity_timer = t_gravity_timer -1
 
 if btnp(3) then 
  t_gravity_timer = 0
 end

 if t_gravity_timer == 0 then
  if not test⬇️() then
  	for x in all(get_current_locs()) do
  	 if mget(x.lx,x.ly) > 0 and mget(x.lx,x.ly)%2 == 0 then
  	  game_over = true
  	 end
  	 mset(x.lx,x.ly,current_piece.sprite+1)
  	end
		 current_piece.piece = blocks[s_next_block]
		 current_piece.lx = 5
		 current_piece.ly = 0
		 current_piece.rot = 1
		 current_piece.sprite = 2*s_next_block-1
	 	s_next_block = flr(rnd(7))+1
  	testmap()
  else
   current_piece.ly = current_piece.ly + 1
  end
  
		t_gravity_timer = t_gravity_timer_max
 end
 
 if test⬅️() and btnp(0) then current_piece.lx = current_piece.lx - 1 end
	if test➡️() and btnp(1) then current_piece.lx = current_piece.lx + 1 end
 if btnp(4) or btnp(2) then rot_⬅️() end
 if btnp(5) then rot_➡️() end
 
 
end

function _draw()
 cls()
 for x in all(get_current_locs()) do
 	spr(current_piece.sprite, x.lx*8, x.ly*8)
 end
 for x in all(blocks[s_next_block][1]) do
 	spr(2*s_next_block-1, (x[1]+12)*8, (x[2]+1)*8)
 end
	print("score",94,64)
	print(score, 90,72)
	map(0,0,0,0)
 if game_over then
  print("game over",4*8,6*8)	
 end
end
-->8
function test⬅️()
 for block in all(get_current_locs()) do
  if fget(mget(block.lx-1,block.ly),0) then
   return false
  end
 end
 return true
end

function test➡️()
 for block in all(get_current_locs()) do
  ➡️ = mget(block.lx+1,block.ly)
  if fget(➡️,0) then
   return false
  end
 end
 return true
end

function test⬇️()
 for block in all(get_current_locs()) do
  if fget(mget(block.lx,block.ly+1),0) then
   return false
  end
 end
 return true
end

function testmap()
 remove_rows = {}
	for y=0,14 do
	 rr = true
		for x=1,9 do
		 if not fget(mget(x,y),1) then
		  rr = false
		  break
		 end
		end
		if rr then
		 add(remove_rows,y)
		end
	end
	clear_rows(remove_rows)
end

function move_rows_⬇️(row)
 for y = row-1,1,-1 do
  for x=1,9 do
   s = mget(x,y)
   if fget(s,1) then
	   mset(x,y,0)
 	  mset(x,y+1,s)
 	 end
  end
 end
end

function clear_rows(remove_rows)
 for y in all(remove_rows) do
		for x=1,9 do
		 mset(x,y,0)
		end
 end
 if #remove_rows > 0 then
  for y in all(remove_rows) do
   move_rows_⬇️(y)
  end
	 score = score + 2^#remove_rows
	end
end

__gfx__
000000000001000033333333000600004844444400a080a00000000000a000003933339300000000cbbbcc7c0000000000006000000000000000000000000000
0000000000111000333333b3006660004844448400a0a0a000000000000d0000395599930bbb0bbbcbbbc7c70777777000006000000010000606060600000000
0070070011111110333b33b3666666604484484400aaaaa00a000a0000dddd00335533930b3b0b3bcbbccccc0707707000666660000181006666666600000000
00077000038383003a3b3a330282820b44844844004c4c40a0a0a0a000d33d00995593990bbbbbbbcccccccc0777777500006000000115506566665600000000
00077000003330043b3b3b330022204b44484484800444000a000a0060dddd00333393930bb333bb7c7cbbbc0007700500006400001110006665566600000000
00700700001111403b333b330062664044448484a0888880a9a0a9a0600dd00099339399ccccccccc7ccbbbc4477777500004000011110000004400000000000
00000000001110003b333b33066660404448884448888a80a9a0a9a0066dd66639995533ccccccccccccbcbc4407700000046000111110000004400000000000
0000000000111000333333336666604048844444a0888880aaa0aaa000dddd0633335593cccccccccccccccc000770000000600000a0a0000000440000000000
50000005555555555000000550000005555555555000000500000000000000000000000000000000000000000000000000000000000000000000000000000000
05000055050000505500005005000050050000505500005500000000000000000000000000000000000000000000000000000000000000000000000000000000
00500505005005005050050000500500005005005050050508888008888088888088880000000000000000000000000000000000000000000000000000000000
00055005000550005005500000055000000550005005500508008008008080808080000000000000000000000000000000000000000000000000000000000000
00055005000550005005500000055000000550005005500508000008008080808080000000000000000000000000000000000000000000000000000000000000
00500505005005005050050000500500005005005050050508088808888080808088800000000000000000000000000000000000000000000000000000000000
05000055050000505500005005000050050000505500005508008008008080808080000000000000000000000000000000000000000000000000000000000000
50000005500000055000000550000005555555555000000508888008008080808088880000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000088880800080888808880000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000080080800080800008080000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000080080800080800008008000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000080080080800888008080000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000080080080800800008800000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000088880008000888808080000000000000000000000000000000000000000000000000000000000
__gff__
0000030003000300030003000300030001010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
1000000000000000000015000000001200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000015000000001200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000015000000001200000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000015000000001200000006090500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000015000000001200000003080400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10000000000000000000150000000012000000030a0400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000012141414141300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000015000000001200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000015000000001200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000015000000001200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000015000000001200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000015000000001200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000015000000001200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000015000000001200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000015000000001200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1311111111111111111113111111111300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
